/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp ESCAPE  &kp Q  &kp W  &kp E     &kp R  &kp T      &kp Y      &kp U  &kp I              &kp O    &kp P     &kp BSPC   &none
       &kp TAB     &kp A  &kp S  &kp D     &kp F  &kp G      &kp H      &kp J  &kp K              &kp L    &kp SEMI  &kp SQT
       &kp LSHFT   &kp Z  &kp X  &kp C     &kp V  &kp B      &kp N      &kp M  &kp COMMA          &kp DOT  &kp FSLH  &kp RSHFT
                                 &kp LGUI  &mo 1  &kp ENTER  &kp SPACE  &mo 2  &kp RIGHT_CONTROL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp TAB     &kp N1        &kp N2        &kp N3        &kp N4                &kp N5                &kp N6     &kp N7        &kp N8    &kp N9     &kp N0  &kp BSPC  &none
       &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3          &bt BT_SEL 4          &none      &kp LEFT      &kp UP    &kp RIGHT  &trans  &trans
       &kp LSHFT   &kp F1        &kp F2        &kp F3        &kp LG(RS(NUMBER_5))  &kp LG(RS(NUMBER_4))  &trans     &none         &kp DOWN  &none      &trans  &trans
                                               &kp LGUI      &trans                &kp ENTER             &kp SPACE  &kp CAPSLOCK  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  {  |  }  | "|" |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  [  |  ]  |  \  |  ~   | // TODO: Fix this row when &mkp is committed
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp ESC    &kp EXCL        &kp AT            &kp HASH    &kp DLLR           &kp PRCNT             &kp CARET       &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC   &none
       &kp LCTRL  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP    &kp C_BRIGHTNESS_INC  &kp MINUS       &kp EQUAL  &kp LBKT         &kp RBKT  &kp PIPE  &kp GRAVE
       &kp LSHFT  &trans          &trans            &trans      &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &kp UNDERSCORE  &trans     &trans           &trans    &kp BSLH  &kp TILDE
                                                    &kp LGUI    &trans             &kp SPACE             &kp ENTER       &trans     &kp RALT
            >;
        };
    };
};
